// Assigning variables
Connection connection = null;
PreparedStatement statement = null;
Connection connection = null;
String dbName = "<DB Name>";
String excelFilePath = "<file path>";
String url = "jdbc;sqlite:" + <"dbPath"> + dbName+ ".db":

// Creating connections to database
        connection = DriverManager.getConnection(url);
        connection.setAutoCommit(false);

// Opening Worksheet
        FileInputStream inputStream = new FileInputStream(excelFilePath);
        Workbook workbook = new XSSFWorkbook(inputStream);
        Sheet firstSheet = workbook.getSheetAt(0);  // First sheet

// Generating maximum number of columns in sheet
        int max = 0;
        Iterator<Row> rowIterator = firstSheet.iterator();
        while (rowIterator.hasNext()) {
                Row nextRow = rowIterator.next();
                Iterator<Cell> cellIterator = nextRow.cellIterator();
                int totalNoOfRows = firstSheet.getLastRowNum(); // To get the number of rows present in sheet
                while (cellIterator.hasNext()) {
                        Cell nextCell = cellIterator.next();
                        int col1 = nextCell.getColumnIndex();
                        for (int row = 1; row <= totalNoOfRows; row++) {
                                if (col1 >= max)
                                max = col1;
                        }
                }
        }

// Creating schema
        ArrayList sch = new ArrayList();
        ArrayList val = new ArrayList();
        for (int first = 1; first <= max + 1; first++) {
                sch.add("'" + first + "'");
                val.add("?");
        }
        String schema = sch.toString().replace("[", "(").replace("]", ")").trim();
        String values = val.toString().replace("[", "(").replace("]", ")").trim();

// Execute queries using create statement
        String table = "CREATE TABLE " + dbName + schema + ";";
        Statement stmt = connection.createStatement();
        stmt.executeUpdate(table);
        String delete = "DELETE FROM " + dbName + ";";
        Statement stmt = connection.createStatement();
        stmt.executeUpdate(delete);
// Execute queries using prepare statement
        String insert = "INSERT INTO " + dbName + schema + "VALUES" + values + ";";
        statement = connection.prepareStatement(insert);

// Read excel data
        Iterator<Row> rowIterator = firstSheet.iterator();
        while (rowIterator.hasNext()) {
                int cellCount = 0;
                Row nextRow = rowIterator.next();
                ArrayList<String> data = new ArrayList<String>();
                data.clear();
                Iterator<Cell> cellIterator = nextRow.cellIterator();
                while (cellIterator.hasNext()) {
                        Cell nextCell = cellIterator.next();
                        int col = nextCell.getColumnIndex();
                        if (nextCell.getCellType() == CellType.STRING) {
                                data.add(cellCount, nextCell.getStringCellValue());
                        } else if (nextCell.getCellType() == CellType.NUMERIC) {
                                data.add(cellCount, NumberToTextConverter.toText(nextCell.getNumericCellValue()));
                        } statement.setString(col + 1, data.get(cellCount).toString());
                        cellCount += 1;
                }
                // Import data in batch using prepared statement methods
                statement.addBatch();
                statement.executeBatch();
                statement.clearBatch();
        }
        // Closing workbook and database connection
        workbook.close();
        connection.commit();
        connection.close();
